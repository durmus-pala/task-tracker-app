{"version":3,"sources":["components/AddTask.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["AddTask","addTask","useState","text","setText","day","setDay","className","onSubmit","e","preventDefault","isDone","alert","htmlFor","id","name","type","placeholder","value","onChange","target","Button","color","toggleShow","style","backgroundColor","onClick","Header","title","showAddTask","Task","task","deleteTask","toggleDone","onDoubleClick","cursor","Tasks","tasks","map","App","setTasks","setShowAddTask","baseUrl","fetchTasks","a","fetch","res","json","data","useEffect","method","headers","body","JSON","stringify","deletedTaskId","toggleDoneId","updatedTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08a999e5.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\r\n// import serialize from \"form-serialize\";\r\n\r\nexport default function AddTask({ addTask }) {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n\r\n  const handleTextChange = (e) => setText(e.target.value);\r\n  const handleDayChange = (e) => setDay(e.target.value);\r\n\r\n  // const text = useRef();\r\n  // const day = useRef();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // form serialize\r\n    // var { text, day } = serialize(e.target, { hash: true });\r\n\r\n    !text ? alert(\"Please add a task\") : addTask({ text, day, isDone: false });\r\n    setText(\"\");\r\n    setDay(\"\");\r\n\r\n    // with useRef()\r\n    // !text.current.value\r\n    //   ? alert(\"Please add a task\")\r\n    //   : addTask({\r\n    //       text: text.current.value,\r\n    //       day: day.current.value,\r\n    //       isDone: false,\r\n    //     });\r\n    // text.current.value = \"\";\r\n    // day.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"add-form\" onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"task\">Task</label>\r\n          <input\r\n            id=\"task\"\r\n            name=\"text\"\r\n            type=\"text\"\r\n            placeholder=\"AddTask\"\r\n            //ref={text}\r\n            value={text}\r\n            onChange={handleTextChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"day\">Day & Time</label>\r\n          <input\r\n            id=\"day\"\r\n            name=\"day\"\r\n            type=\"text\"\r\n            placeholder=\"Add Day & Time\"\r\n            //ref={day}\r\n            value={day}\r\n            onChange={handleDayChange}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Button({ color, text, toggleShow }) {\r\n  return (\r\n    <div>\r\n      <button\r\n        className=\"btn\"\r\n        style={{ backgroundColor: color }}\r\n        onClick={toggleShow}\r\n      >\r\n        {text}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nexport default function Header({ title, showAddTask, toggleShow }) {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n      <Button\r\n        color={showAddTask ? \"red\" : \"purple\"}\r\n        text={showAddTask ? \"Close Add Task Bar\" : \"Show Add Task Bar\"}\r\n        toggleShow={toggleShow}\r\n      />\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nexport default function Task({ task, deleteTask, toggleDone }) {\r\n  return (\r\n    <div\r\n      className={`task ${task.isDone ? \"done\" : \"\"}`}\r\n      onDoubleClick={() => toggleDone(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}{\" \"}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => deleteTask(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\n\r\nexport default function Tasks({ tasks, deleteTask, toggleDone }) {\r\n  return (\r\n    <div>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          deleteTask={deleteTask}\r\n          toggleDone={toggleDone}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport AddTask from \"./components/AddTask\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nexport default function App() {\n  const [tasks, setTasks] = useState([]);\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const baseUrl = \"http://localhost:5000/tasks\";\n\n  // Fetch tasks\n  const fetchTasks = async () => {\n    const res = await fetch(baseUrl);\n    const data = await res.json();\n    // console.log(data);\n    setTasks(data);\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Add Task\n\n  const addTask = async (task) => {\n    const res = await fetch(baseUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n    await res.json();\n    fetchTasks();\n  };\n  // const addTask = (task) => {\n  //   const id = Math.floor(Math.random() * 100) + 1;\n  //   const newTask = { id, ...task };\n  //   setTasks([...tasks, newTask]);\n  // };\n\n  // Delete Task\n\n  const deleteTask = async (deletedTaskId) => {\n    await fetch(`${baseUrl}/${deletedTaskId}`, {\n      method: \"DELETE\",\n    });\n    fetchTasks();\n  };\n\n  // const deleteTask = (deletedTaskId) => {\n  //   setTasks(tasks.filter((task) => task.id !== deletedTaskId));\n  // };\n\n  // Update Task (Toggle done)\n\n  const toggleDone = async (toggleDoneId) => {\n    const res = await fetch(`${baseUrl}/${toggleDoneId}`);\n    const data = await res.json();\n    const updatedTask = { ...data, isDone: !data.isDone };\n\n    await fetch(`${baseUrl}/${toggleDoneId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updatedTask),\n    });\n    fetchTasks();\n  };\n\n  // const toggleDone = (toggleDoneId) => {\n  //   setTasks(\n  //     tasks.map((task) =>\n  //       task.id === toggleDoneId ? { ...task, isDone: !task.isDone } : task\n  //     )\n  //   );\n  //};\n  // Toggle Show\n  const toggleShow = () => {\n    setShowAddTask(!showAddTask);\n  };\n  return (\n    <div className=\"container\">\n      <Header\n        title=\"Task Tracker\"\n        showAddTask={showAddTask}\n        toggleShow={toggleShow}\n      />\n      {showAddTask && <AddTask addTask={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} deleteTask={deleteTask} toggleDone={toggleDone} />\n      ) : (\n        \"No Tasks To Shown\"\n      )}\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}